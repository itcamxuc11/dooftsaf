{"version":3,"sources":["components/header/nav.js","components/header/header.js","components/auth/register.js","components/restaurant-page/item.js","components/restaurant-page/restaurant.js","components/footer/footer.js","components/search/search.js","config/googlemap.js","components/home/home.js","components/checkout/checkout.js","config/firebase.js","components/auth/login.js","components/notifier.js/notifier.js","components/profile/profile.js","App.js","serviceWorker.js","reducer/cart-reducer.js","reducer/search-reducer.js","reducer/rootReducer.js","store.js","index.js"],"names":["Nav","onClickLogout","firebase","signOut","this","props","loginedUser","onClick","className","to","displayName","Component","Header","getCartNumber","cartStorage","JSON","parse","localStorage","getItem","total","getCartStatus","f","getCartInfo","items","onChangeQuantity","event","id","val","target","value","i","findIndex","obj","oldCount","count","newTotal","splice","newCart","console","log","upDateCart","stringify","order","showCart","state","redirect","userLogined","onAuthStateChanged","user","setState","href","src","alt","title","onCheckout","map","key","image","name","price","min","onChange","type","Value","deleteItemFromCart","connect","tmp","cartReducer","folowCart","dispatch","ownProps","data","item","Register","onChangeInput","nam","componentDidMount","currentUser","onClickLogin","createUserWithEmailAndPassword","email","password","then","doc","updateProfile","collection","uid","set","address","phoneNumber","role","catch","error","errorMessage","message","alert","direct","placeholder","Item","addToCart","description","Restaurant","restaurantName","restaurantAdress","categories","itemList","restaurantId","match","params","setItem","get","exists","location","ref","forEach","push","filter","category","index","Footer","Search","db","directionsService","window","google","maps","DirectionsService","route","origin","LatLng","lat","lng","destination","travelMode","response","status","routes","directionsData","legs","distance","text","duration","searchReducer","Home","onSelected","place","search","geometry","formatted_address","onBtnSearchClick","onPlaceSelected","apiKey","types","componentRestrictions","country","Checkout","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","onSubmitHandler","preventDefault","username","totalPrice","shippingFee","detail","restaurant","date","Date","removeItem","path","resLocation","getShippingFee","length","onSubmit","noValidate","htmlFor","Math","ceil","Login","signInWithEmailAndPassword","onClickReset","sendPasswordResetEmail","forgetedAccount","err","close","showModal","Modal","show","onHide","closeButton","Title","Body","Notifier","alertShow","timeout","onDismiss","hideAlert","Profile","onClickDetail","orders","onEditClick","editClass","userData","onClickSave","DBUser","userId","DBuser","where","FieldPath","documentId","onSnapshot","snapshot","docChanges","change","snapmshot","App","exact","component","Boolean","hostname","cartState","addAlert","action","dCartStorage","dItems","dTotal","initialState","rootReducer","combineReducers","store1","redux","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a409b998.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nexport default class Nav extends Component {\r\n\r\n    onClickLogout = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n    render() {\r\n        if (!this.props.loginedUser)\r\n            return (\r\n                <Link className=\"header__link\" to=\"/login\">Đăng nhập</Link>\r\n            )\r\n        else return (\r\n            <span>\r\n                <span onClick={this.onClickLogout} className=\"header__link\" to=\"/login\">Đăng xuất</span>\r\n                <Link to=\"myprofile\"><span className=\"header__link\">{this.props.loginedUser.displayName}</span></Link>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useHistory, Link } from 'react-router-dom';\r\nimport * as firebase from 'firebase';\r\nimport Nav from './nav';\r\n\r\nexport class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            userLogined: null\r\n        }\r\n\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            this.setState({ userLogined: user });\r\n        })\r\n    }\r\n\r\n    getCartNumber = () => {\r\n        let cartStorage = JSON.parse(localStorage.getItem('cart'));\r\n        if (cartStorage) return <span className=\"basket-count pos-absolute\">{cartStorage.total}</span>\r\n        return null;\r\n    }\r\n\r\n    getCartStatus = (f) => {\r\n        if (f === true) return 'show';\r\n        return 'hide';\r\n    }\r\n\r\n    getCartInfo = () => {\r\n        let cartStorage = JSON.parse(localStorage.getItem('cart'));\r\n        if (cartStorage) return cartStorage.items;\r\n        return [];\r\n    }\r\n\r\n    onChangeQuantity = (event, id) => {\r\n        let val = event.target.value;\r\n        let cartStorage = JSON.parse(localStorage.getItem('cart'));\r\n        let items = cartStorage.items;\r\n        let i = items.findIndex((obj) => {\r\n            return obj.id == id\r\n        })\r\n\r\n        if (i !== -1) {\r\n            let oldCount = items[i].count;\r\n            let newTotal = cartStorage.total + (val - oldCount);\r\n            if (val == 0) {\r\n                items.splice(i, 1);\r\n            }\r\n            else items[i].count = val;\r\n            let newCart = { items: items, total: newTotal };\r\n            console.log(newTotal);\r\n            this.props.upDateCart(JSON.stringify(newCart));\r\n        }\r\n    }\r\n\r\n    order = () => {\r\n        this.props.showCart();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"header\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header__inner\"><a href=\"/\"><img src=\"/images/logo_web.png\" alt=\"Uber Eats\" className=\"header__logo\" /></a>\r\n                            <div className=\"header__delivery-info\"><label className=\"control\">\r\n                                <div className=\"control__input-wrapper border-0 tablet dropdown\">\r\n\r\n                                    <ul className=\"dropdown-leagues\">\r\n                                    </ul>\r\n                                </div>\r\n                            </label>\r\n                            </div>\r\n                            <div className=\"header__search\"><label className=\"control\">\r\n\r\n                            </label>\r\n                            </div>\r\n                            <Nav loginedUser={this.state.userLogined} />\r\n                            <button onClick={this.props.showCart} className=\"header__link pos-relative\" href=\"/basket\">\r\n                                <img title=\"basket\" className=\"header-logo\" src=\"/images/basket.svg\" alt=\"basket\" />\r\n                                {this.getCartNumber()}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className={this.getCartStatus(this.props.onCheckout) + \" modal\"}>\r\n                    <div className=\"checkout d-flex flex-colum\">\r\n                        <div className=\"checkout-header\">\r\n                            <div className=\"justify-content-end d-flex\">\r\n                                <button onClick={this.props.showCart}><img src=\"/images/close.svg\" /></button>\r\n                            </div>\r\n                            <h3>Giỏ hàng</h3>\r\n                        </div>\r\n                        <table>\r\n                            <thead>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.getCartInfo().map((value, key) => {\r\n                                        return (\r\n                                            <tr key={key}>\r\n                                                <td className=\"pr-0\"><img className=\"item__img\" alt=\"Item\" src={value.image} /></td>\r\n                                                <td className=\"text pl-0\">{value.name}</td>\r\n                                                <td className=\"text\">{value.price}</td>\r\n                                                <td className=\"text\"><input min=\"1\" onChange={(event) => { this.onChangeQuantity(event, value.id) }}\r\n                                                    type=\"number\" Value={value.count} /></td>\r\n                                                <td onClick={()=>{this.props.deleteItemFromCart(value)}} className=\"text delete-item\">X</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"checkout-footer\">\r\n                            <Link to=\"/checkout\">\r\n                                <button onClick={this.order}>Đặt hàng</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tmp: state.cartReducer.folowCart,\r\n        onCheckout: state.cartReducer.onCheckout\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        showCart: () => {\r\n            dispatch({\r\n                type: 'SHOW_CART'\r\n            })\r\n        },\r\n        upDateCart: (data) => {\r\n            dispatch({\r\n                type: 'UPDATE',\r\n                data: data\r\n            })\r\n        },\r\n\r\n        deleteItemFromCart: (item) => {\r\n            dispatch({\r\n                type: 'DELETE',\r\n                item: item\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React, { Component } from 'react'\r\nimport * as firebase from 'firebase'\r\nimport { Redirect, Link } from 'react-router-dom';\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n\r\n        }\r\n    }\r\n\r\n    onChangeInput = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [nam]: val });\r\n    }\r\n    componentDidMount = () => {\r\n        console.log(firebase.auth().currentUser);\r\n    }\r\n\r\n    onClickLogin = () => {\r\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((doc) => {\r\n                let user = doc.user;\r\n                user.updateProfile({\r\n                    displayName: this.state.displayName\r\n                })\r\n                firebase.firestore().collection('users').doc(user.uid)\r\n                    .set({\r\n                        name: this.state.displayName,\r\n                        address: this.state.address,\r\n                        email: this.state.email,\r\n                        phoneNumber: this.state.phoneNumber,\r\n                        role: 'user'\r\n                    })\r\n                    .then(() => {\r\n                        this.setState({\r\n                            redirect: true\r\n                        })\r\n                    })\r\n            })\r\n            .catch(function (error) {\r\n                var errorMessage = error.message;\r\n                alert(errorMessage);\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { redirect } = this.state;\r\n        let direct = '';\r\n        if (redirect) {\r\n            direct = <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div id=\"root\">\r\n                {direct}\r\n                <div className=\"App\">\r\n                    <div className=\"sc-fznyAO ejMHpf pt-3\">\r\n                        <div className=\"form-container\">\r\n                            <h2 className=\"mb-4\">Đăng ký</h2>\r\n                            <form>\r\n                                <input onChange={this.onChangeInput} name=\"email\" type=\"email\" placeholder=\"Email\" className=\"mb-1 sc-AxiKw dVlCBT\" />\r\n                                <input onChange={this.onChangeInput} name=\"password\" type=\"password\" placeholder=\"Mật khẩu\" className=\"mb-1 sc-AxiKw dVlCBT\" />\r\n                                <input onChange={this.onChangeInput} name=\"displayName\" type=\"text\" placeholder=\"Tên đầy đủ\" className=\"mb-1 sc-AxiKw dVlCBT\" />\r\n                                <input onChange={this.onChangeInput} name=\"address\" type=\"text\" placeholder=\"Địa chỉ\" className=\"mb-1 sc-AxiKw dVlCBT\" />\r\n                                <input onChange={this.onChangeInput} name=\"phoneNumber\" type=\"number\" placeholder=\"Số điện thoại\" className=\"mb-1 sc-AxiKw dVlCBT\" />\r\n                                <button type=\"button\" onClick={this.onClickLogin} className=\"mb-1 sc-AxhCb gxxaVj\">Đăng ký</button>\r\n                            </form>\r\n                            <Link to=\"/login\">Đã có tài khoản?</Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nexport class Item extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    addToCart = ()=>{\r\n        var item = {\r\n            id: this.props.id,\r\n            name: this.props.name,\r\n            image: this.props.image,\r\n            price:this.props.price,\r\n            description:this.props.description,\r\n            count:1\r\n        }\r\n\r\n        this.props.addToCart(item);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"item\">\r\n                    <div className=\"item__left\">\r\n                        <h3 className=\"item__title\">{this.props.name}</h3>\r\n                        <p className=\"item__description mb-1\">\r\n                            {this.props.description}\r\n                        </p>\r\n                        <div className=\"d-flex\">\r\n                            <p className=\"item__price col-10 mb-1\">{this.props.price} Đ</p>\r\n                            <p onClick={this.addToCart} className=\"col-2 mb-1 text-right p-0\"><img className=\"add-cart\" alt='add' src=\"/images/plus.svg\" /></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item-right\"><img className=\"item__img\" alt=\"Meal\" src={this.props.image} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        addToCart: (item) => {\r\n            dispatch({\r\n                type:'ADD',\r\n                item: item\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Item)\r\n","import React, { Component } from 'react'\r\nimport * as firebase from 'firebase';\r\nimport Item from './item'\r\nexport default class Restaurant extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            restaurantName: '',\r\n            restaurantAdress: '',\r\n            description:'',\r\n            categories: [],\r\n            itemList: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var restaurantId = this.props.match.params.id;\r\n        localStorage.setItem('id',restaurantId);\r\n        const db = firebase.firestore();\r\n        var DBRestaurant = db.collection('restaurants').doc(restaurantId);\r\n        DBRestaurant.get().then((doc) => {\r\n            if (doc.exists) {\r\n                var data = doc.data();\r\n                localStorage.setItem('location',JSON.stringify(doc.data().location));\r\n                let categories = [];\r\n                if(data.categories) categories = data.categories;\r\n                this.setState({\r\n                    restaurantName: data.name,\r\n                    restaurantAdress: data.address,\r\n                    description: data.description,\r\n                    categories: categories\r\n                })\r\n                doc.ref.collection('menu').get().then((itemList) => {\r\n                    let items = [];\r\n                    itemList.forEach((item) => {\r\n                        items.push({ id: item.id, data: item.data() });\r\n                    })\r\n                    this.setState({\r\n                        itemList: items\r\n                    })\r\n                })\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n                <main>\r\n                    <div className=\"restaurant-page restaurant\">\r\n                        <div className=\"hero\">\r\n                            <div className=\"restaurant-page__img-wrapper\"><img src=\"https://d1ralsognjng37.cloudfront.net/43976b06-3271-4476-bdd6-5f37ac5db65e\" alt=\"\" className=\"restaurant-page__img\" /></div>\r\n                            <div className=\"restaurant-page__title page__title\">\r\n                                <h1 className=\"page__title_indent title\">{this.state.restaurantName}</h1>\r\n                                <p className=\"page__title_indent categories\">{this.state.description}</p>\r\n                                <p className=\"eta\">20–30 min</p>\r\n                                <div className=\"location-wrapper\">\r\n                                    <p className=\"location\">{this.state.restaurantAdress}</p><a href=\"https://www.google.com.ua/maps /@50.4851493,30.4721233,14z?hl=ru\" className=\"location__info\"><span className=\"location__dot\">•</span>Map</a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"content\" />\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <nav className=\"restaurant__menu\">\r\n                                <ul className=\"restaurant__menu-items menu\">\r\n                                    {\r\n                                        this.state.categories.map((value, key) => {\r\n                                            return (\r\n                                                <li key={key} className=\"menu__item\">\r\n                                                    <a href={\"#\" + value}>\r\n                                                        <p className=\"menu__item-btn\">{value}</p>\r\n                                                    </a>\r\n                                                </li>)\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            </nav>\r\n                            <div className=\"restaurant__main\">\r\n                                {\r\n                                    this.state.categories.map((value, key) => {\r\n                                        return (\r\n                                            <section key={key} id={value} className=\"restaurant__items items\">\r\n                                                <h2 className=\"restaurant-title\">{value}</h2>\r\n                                                <div className=\"container-item\">\r\n                                                    {\r\n                                                        this.state.itemList.filter(item => item.data.category === value).map((val, index) => {\r\n                                                            return (\r\n                                                                <Item id={val.id} key={index} image={val.data.image}  name={val.data.name} price={val.data.price}\r\n                                                                    description={val.data.description} />\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </section>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <div className=\"content\">\r\n                    <div className=\"footer__top-part\">\r\n                        <div className=\"footer__main\">\r\n                            <div className=\"footer__logo-container\"><a href=\"/\"><img className=\"footer__logo\" src=\"/images/logo_web.png\" alt=\"Doof Tsaf\" /></a>\r\n                                <div className=\"select\"><select name=\"language\" className=\"select__input\">\r\n                                    <option value=\"vi\">Tiếng Việt</option>\r\n                                </select><img className=\"select__icon\" src=\"/images/world.svg\" alt=\"select icon\" /><img className=\"select__arrow\" src=\"/images/if_icon-ios7-arrow-back_211686.svg\" alt=\"arrow down\" /></div>\r\n                            </div>\r\n                            <div className=\"footer__mobile-apps\"><a href=\"https://play.google.com/store/apps/details?id=com .ubercab.eats&referrer=mat_click_id%3D7056afe65227473 9b3ef74d2aa740491-20191103-7336%26link_click_id%3D719 550996128553076&mat_click_id=7056afe652274739b3ef74d2 aa740491-20191103-7336 \" className=\"footer__mobile-app\"><img src=\"/images/Google.svg\" alt=\"App Store\" /></a><a href=\"https://play.google.com/store/apps/details?id=com .ubercab.eats&referrer=mat_click_id%3D7056afe65227473 9b3ef74d2aa740491-20191103-7336%26link_click_id%3D719 550996128553076&mat_click_id=7056afe652274739b3ef74d2 aa740491-20191103-7336 \" className=\"footer__mobile-app\"><img src=\"/images/Apple.svg\" alt=\"Google Play\" /></a></div>\r\n                        </div>\r\n                        <div><a href=\"http://localhost:4000/register\" className=\"links__link\">Đăng ký mở quán</a></div>\r\n                        <div className=\"footer__top-links links\"><a href=\"#\" className=\"links__link links__link--intended\">Lên đầu trang</a><a href=\"#\" className=\"links__link\"></a></div>\r\n                    </div>\r\n                    <div className=\"footer__bottom-part\">\r\n                        <p className=\"footer__copyright\">- 2020 Doof Tsaf.</p>\r\n                        <div className=\"footer__misc\">\r\n                            <div className=\"footer__social social\"><a href=\"#\" className=\"social__link\"><img src=\"/images/twitter.svg\" alt=\"facebook\" /></a><a href=\"#\" className=\"social__link\"><img src=\"/images/instagram.svg\" alt=\"twitter\" /></a><a href=\"#\" className=\"social__link\"><img src=\"/images/Group (4).svg\" alt=\"instagram\" /></a></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as firebase from 'firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { itemList: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const db = firebase.firestore();\r\n        var directionsService = new window.google.maps.DirectionsService();\r\n\r\n        var DBRestaurant = db.collection('restaurants');\r\n        DBRestaurant.get().then((itemList) => {\r\n            itemList.forEach((item) => {\r\n                let data = item.data();\r\n                let id = item.id;\r\n                var origin = new window.google.maps.LatLng(data.location.lat, data.location.lng);\r\n                var des = new window.google.maps.LatLng(this.props.location.lat, this.props.location.lng);\r\n                var route = {\r\n                    origin: origin,\r\n                    destination: des,\r\n                    travelMode: 'DRIVING'\r\n                }\r\n                directionsService.route(route,\r\n                    (response, status) => {\r\n                        if (response.routes[0]) {\r\n                            var directionsData = response.routes[0].legs[0]; // Get data about the mapped route\r\n                            if (!directionsData) {\r\n                                return;\r\n                            }\r\n                            else {\r\n                                if (directionsData.distance.value < 10000) {\r\n                                    this.setState({\r\n                                        itemList: [...this.state.itemList, {\r\n                                            id: id,\r\n                                            data: data,\r\n                                            distance: directionsData.distance.text,\r\n                                            duration: directionsData.duration.text\r\n                                        }]\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n            })\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content search-content\">\r\n                <h3 className=\"heading-page\">{'Các quán ăn gần ' + this.props.address}</h3>\r\n                <div className=\"container-item\">\r\n                    {\r\n                        this.state.itemList.map((value, index) => {\r\n                            return (\r\n                                <Link key={index} to={\"/restaurant/\" + value.id}>\r\n                                    <div className=\"item flex-colum item-search\">\r\n                                        <div className=\"store-banner\">\r\n                                            <img className=\"reponsive-img\" src=\"https://d1sag4ddilekf6.cloudfront.net/compressed/merchants/5-CZCKJNWFLAEXV2/hero/bc5d650bc29e40d0a789e23cea051895_1590338521272011232.jpg\" />\r\n                                        </div>\r\n                                        <h4 className=\"store-title\">{value.data.name}</h4>\r\n                                        <div className=\"store-des\">\r\n                                            {value.data.description}\r\n                                        </div>\r\n                                        <div className=\"store-des d-flex\">\r\n                                            <div className=\"rating\">5</div>\r\n                                            <div className=\"time-delivery\">\r\n                                                <h4>{value.distance + ' - ' + value.duration}</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        location: state.searchReducer.location,\r\n        address: state.searchReducer.address\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Search)\r\n","export default \"AIzaSyDnbHQ_2Q9POiAFe6k6D0iW3XiNicNNvdE\";","import React, { Component } from 'react'\r\nimport AutoComplete from 'react-google-autocomplete';\r\nimport key from '../../config/googlemap';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: {\r\n                lat: '10.871326',\r\n                lng: '106.789129'\r\n            },\r\n            address: 'DHSPKT'\r\n        }\r\n    }\r\n\r\n    onSelected = (place) => {\r\n        this.props.search({\r\n            location: {\r\n                lat: place.geometry.location.lat(),\r\n                lng: place.geometry.location.lng()\r\n            },\r\n            address: place.formatted_address\r\n        })\r\n        this.setState({\r\n            location: {\r\n                lat: place.geometry.location.lat(),\r\n                lng: place.geometry.location.lng()\r\n            },\r\n        })\r\n    }\r\n\r\n    onBtnSearchClick = () => {\r\n        this.props.search(this.state.location);\r\n        console.log(this.state.location);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"home-page\">\r\n                    <h3 className=\"search-title\">Tìm quán ăn ở gần bạn</h3>\r\n                    <div className=\"d-flex justify-content-center w-100\">\r\n                        <div className=\"search-box\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"marker-icon\">\r\n                                    <img src=\"images/marker.png\" />\r\n                                </div>\r\n                                <div className=\"fl-search\">\r\n                                    <AutoComplete onPlaceSelected={this.onSelected} apiKey={key} types={['address']} componentRestrictions={{ country: \"VN\" }} className=\"txt-search\" placeholder=\"Địa chỉ\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <Link to=\"/restaurants\">\r\n                                <button className=\"btn-search\">\r\n                                    Tìm\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        search: (data) => {\r\n            dispatch({\r\n                type: 'SEARCH',\r\n                data: data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as firebase from 'firebase';\r\nimport AutoComplete from 'react-google-autocomplete';\r\nimport key from '../../config/googlemap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Checkout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let cartStorage = JSON.parse(localStorage.getItem('cart'));\r\n        if (cartStorage) {\r\n            let items = cartStorage.items;\r\n            let total = 0;\r\n            for (let i = 0; i < items.length; i++) {\r\n                total += items[i].price * items[i].count;\r\n            }\r\n            this.state = {\r\n                items: cartStorage.items,\r\n                count: cartStorage.total,\r\n                total: total,\r\n                shippingFee: 0,\r\n            }\r\n        }\r\n        else {\r\n            this.state = {\r\n                items: [],\r\n                count: 0,\r\n                total: 0,\r\n                shippingFee: 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const db = firebase.firestore();\r\n        var restaurantId = localStorage.getItem('id');\r\n        db.collection('orders').doc().set({\r\n            username: this.state.name,\r\n            address: this.state.address,\r\n            location: this.state.location,\r\n            phoneNumber: this.state.phoneNumber,\r\n            totalPrice: this.state.total + this.state.shippingFee,\r\n            detail: this.state.items,\r\n            restaurant: restaurantId,\r\n            shippingFee: this.state.shippingFee,\r\n            date: new Date(),\r\n            user: firebase.auth().currentUser.uid,\r\n            status: 'Chờ xác nhận',\r\n        }).then(() => {\r\n            alert('Đặt thành công');\r\n            localStorage.removeItem('cart');\r\n            this.setState({\r\n                redirect: true,\r\n                path: '/'\r\n            })\r\n        })\r\n    }\r\n    onChangeInput = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [nam]: val });\r\n    }\r\n\r\n    onSelected = (place) => {\r\n        var directionsService = new window.google.maps.DirectionsService();\r\n        this.setState({\r\n            address: place.formatted_address,\r\n            location: {\r\n                lat: place.geometry.location.lat(),\r\n                lng: place.geometry.location.lng()\r\n            },\r\n        })\r\n        let resLocation = JSON.parse((localStorage.getItem('location')));\r\n        var origin = new window.google.maps.LatLng(resLocation.lat, resLocation.lng);\r\n        var des = new window.google.maps.LatLng(place.geometry.location.lat(), place.geometry.location.lng());\r\n        var route = {\r\n            origin: origin,\r\n            destination: des,\r\n            travelMode: 'DRIVING'\r\n        }\r\n        directionsService.route(route,\r\n            (response, status) => {\r\n                if (response.routes[0]) {\r\n                    var directionsData = response.routes[0].legs[0]; // Get data about the mapped route\r\n                    if (!directionsData) {\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            shippingFee: getShippingFee(directionsData.distance.value)\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { redirect } = this.state;\r\n        let direct = '';\r\n        if (redirect) {\r\n            direct = <Redirect to={this.state.path} />\r\n        }\r\n        return (\r\n            <div className=\"container mb-5\">\r\n                {direct}\r\n                <div className=\"py-5 text-center\">\r\n                    <h2>Xác nhận đặt hàng</h2>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 order-md-2 mb-4\">\r\n                        <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <span className=\"text-muted\">Giỏ hàng</span>\r\n                            <span className=\"badge badge-secondary badge-pill\">{this.state.count}</span>\r\n                        </h4>\r\n                        <ul className=\"list-group mb-3\">\r\n                            {\r\n                                this.state.items.map((value, key) => {\r\n                                    return (\r\n                                        <li key={key} className=\"list-group-item d-flex justify-content-between lh-condensed\">\r\n                                            <div>\r\n                                                <h6 className=\"my-0\">{value.name}</h6>\r\n                                                <small className=\"text-muted\">{\"x \" + value.count}</small>\r\n                                            </div>\r\n                                            <span className=\"text-muted\">{value.count * value.price}</span>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"list-group-item d-flex justify-content-between\">\r\n                                <span>Phí vận chuyển</span>\r\n                                <strong>{this.state.shippingFee}</strong>\r\n                            </li>\r\n                            <li className=\"list-group-item d-flex justify-content-between\">\r\n                                <span>Tổng (VNĐ)</span>\r\n                                <strong>{this.state.total + this.state.shippingFee}</strong>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-8 order-md-1\">\r\n                        <h4 className=\"mb-3\">Thông tin người mua</h4>\r\n                        <form onSubmit={this.onSubmitHandler} className=\"needs-validation\" noValidate>\r\n                            <div className=\"row\">\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"email\">Tên <span className=\"text-muted\"></span></label>\r\n                                <input onChange={this.onChangeInput} type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Nguyen van a\" />\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please enter a valid email address for shipping updates.\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"address\">Địa chỉ</label>\r\n                                <AutoComplete onPlaceSelected={this.onSelected} apiKey={key} types={['address']} componentRestrictions={{ country: \"VN\" }} className=\"form-control\" placeholder=\"Địa chỉ\" />\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please enter your shipping address.\r\n                                 </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label>Số điện thoại <span className=\"text-muted\"></span></label>\r\n                                <input type=\"text\" onChange={this.onChangeInput} className=\"form-control\" name=\"phoneNumber\" placeholder=\"091234567\" />\r\n                            </div>\r\n                            <hr className=\"mb-4\" />\r\n                            <button className=\"btn btn-primary btn-lg btn-block\" type=\"submit\">Đặt hàng</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tmp: state.cartReducer.folowCart,\r\n        onCheckout: state.cartReducer.onCheckout\r\n    }\r\n}\r\n\r\nfunction getShippingFee(distance) {\r\n    distance = distance/1000;\r\n    if (distance <= 5) return 20000;\r\n    else return Math.ceil(distance) * 5000 + 20000;\r\n}\r\nexport default connect(mapStateToProps)(Checkout)","import * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCOIm5_13T2c_OeaMdGtRDwNc1hb-Y1AOc\",\r\n    authDomain: \"kltn-81564.firebaseapp.com\",\r\n    databaseURL: \"https://kltn-81564.firebaseio.com\",\r\n    projectId: \"kltn-81564\",\r\n    storageBucket: \"kltn-81564.appspot.com\",\r\n    messagingSenderId: \"686159462882\",\r\n    appId: \"1:686159462882:web:f0e0b939f3f6c9b17179bb\"\r\n  };\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\n\r\n","import React, { Component } from 'react'\r\nimport * as firebase from 'firebase';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n\r\n            forgetedAccount: '',\r\n            showModal: false,\r\n        }\r\n    }\r\n\r\n    onChangeInput = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [nam]: val });\r\n    }\r\n    componentDidMount = () => {\r\n        console.log(firebase.auth().currentUser);\r\n    }\r\n\r\n    onClickLogin = () => {\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(() => {\r\n                this.setState({\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                var errorMessage = error.message;\r\n                alert(errorMessage);\r\n            });\r\n    }\r\n\r\n\r\n    onClickReset = () => {\r\n        firebase.auth().sendPasswordResetEmail(this.state.forgetedAccount)\r\n            .then(() => {\r\n                alert(\"Sử dụng link được gửi vào email của bạn để đặt lại mật khẩu!\");\r\n            })\r\n            .catch((err) => {\r\n                alert(err);\r\n            })\r\n    }\r\n\r\n    close = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            showModal: true\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        let direct = '';\r\n        if (redirect) {\r\n            direct = <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div id=\"root\">\r\n                {direct}\r\n                <div className=\"App\">\r\n                    <div className=\"sc-fznyAO ejMHpf pt-3\">\r\n                        <div className=\"form-container\">\r\n                            <h2 className=\"mb-4 mt-4\">Đăng nhập</h2>\r\n                            <form>\r\n                                <input onChange={this.onChangeInput} name=\"email\" type=\"email\" placeholder=\"Email\" className=\"mb-1 sc-AxiKw dVlCBT\" />\r\n                                <input onChange={this.onChangeInput} name=\"password\" type=\"password\" placeholder=\"Mật khẩu\" className=\"mb-1 sc-AxiKw dVlCBT\" />\r\n                                <button type=\"button\" onClick={this.onClickLogin} className=\"mb-1 sc-AxhCb gxxaVj\">Đăng nhập</button>\r\n                            </form>\r\n                            <Link to=\"/register\" >Đăng ký</Link>\r\n                            <Link className=\"ml-2\" onClick={this.showModal}>Quên mật khẩu</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal show={this.state.showModal} onHide={this.close}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Quên mật khẩu</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"col\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Email của bạn:</label>\r\n                                    <input onChange={this.onChangeInput} name=\"forgetedAccount\" type=\"text\" className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-secondary\" onClick={this.close}>Close</button>\r\n                        <button className=\"btn btn-primary\" onClick={this.onClickReset}>Reset mật khẩu</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Alert, AlertContainer } from \"react-bs-notifier\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass Notifier extends Component {\r\n    render() {\r\n        if (this.props.alertShow == true) return (\r\n            <AlertContainer>\r\n                <Alert timeout = {500} onDismiss = {this.props.hideAlert} type=\"success\">Thêm thành công</Alert>\r\n            </AlertContainer>\r\n        );\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        hideAlert: () => {\r\n            dispatch(\r\n                {\r\n                    type: 'HIDE_ALERT'\r\n                }\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        alertShow: state.cartReducer.alertShow\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)","import React, { Component } from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport * as firebase from 'firebase'\r\nimport AutoComplete from 'react-google-autocomplete'\r\nimport key from '../../config/googlemap'\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders: [],\r\n            items: [],\r\n            showModal: false,\r\n\r\n            editClass: '',\r\n            userData: {},\r\n            name: '',\r\n            address: '',\r\n            phoneNumber: 0,\r\n            location: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var db = firebase.firestore().collection('orders');\r\n        var DBuser = firebase.firestore().collection('users');\r\n        var userId = firebase.auth().currentUser.uid;\r\n\r\n        DBuser.where(firebase.firestore.FieldPath.documentId(), '==', userId)\r\n            .onSnapshot((snapshot) => {\r\n                snapshot.docChanges().forEach((change) => {\r\n                    console.log(change.doc.data());\r\n                    this.setState({\r\n                        userData: change.doc.data(),\r\n                    })\r\n                });\r\n            })\r\n\r\n        db.where('user', '==', userId)\r\n            .onSnapshot((snapmshot) => {\r\n                snapmshot.docChanges().forEach((change) => {\r\n                    if (change.type === \"added\") {\r\n                        this.setState({ orders: [...this.state.orders, change.doc.data()] })\r\n                    }\r\n                })\r\n            })\r\n    }\r\n\r\n    onClickDetail = (i) => {\r\n        this.setState({\r\n            showModal: true,\r\n            items: this.state.orders[i].detail\r\n        })\r\n    }\r\n\r\n    close = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    onEditClick = () => {\r\n        this.setState({\r\n            editClass: 'show',\r\n            name: this.state.userData.name,\r\n            address: this.state.userData.address,\r\n            location: this.state.userData.location,\r\n            description: this.state.userData.description,\r\n            phoneNumber: this.state.userData.phoneNumber\r\n        })\r\n    }\r\n\r\n    onSelected = (place) => {\r\n        this.setState({ \r\n            address:place.formatted_address,\r\n            location:{\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng()\r\n        }})\r\n    }\r\n\r\n    onClickSave = () => {\r\n        var DBUser = firebase.firestore().collection('users');\r\n        var userId = firebase.auth().currentUser.uid;\r\n\r\n        DBUser.doc(userId).set({\r\n            ...this.state.userData,\r\n            address: this.state.address,\r\n            location: this.state.location,\r\n            name: this.state.name,\r\n            phoneNumber: this.state.phoneNumber,\r\n        })\r\n            .then(() => {\r\n                this.setState({\r\n                    editClass: '',\r\n                })\r\n            })\r\n            .catch()\r\n\r\n    }\r\n\r\n    onChangeInput = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [nam]: val });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mb-5 pb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <div className=\"sub-menu\"> </div>\r\n                        <div className=\"d-flex heading-panel mt-5\">\r\n                            <h3 className=\"col-12 page-title\">\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input type=\"text\" Value={this.state.userData.name}\r\n                                        onChange={this.onChangeInput} className={this.state.editClass + \" form-control info-left\"} name=\"name\" />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span onClick={this.onEditClick} className=\"input-group-text info-right\">\r\n                                            <i className=\"fas fa-pencil-alt\"></i>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </h3>\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend \">\r\n                                            <span className=\"input-group-text info-left\">\r\n                                                <i className=\"fas fa-map-marker-alt\"></i>\r\n                                            </span>\r\n                                        </div>\r\n                                        <AutoComplete className={this.state.editClass + \" form-control info-right\"} onPlaceSelected={this.onSelected} apiKey={key} types={['address']}\r\n                                            componentRestrictions={{ country: \"VN\" }} Value={this.state.userData.address} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend \">\r\n                                            <span className=\"input-group-text info-left\">\r\n                                                <i className=\"fas fa-mobile-alt\"></i>\r\n                                            </span>\r\n                                        </div>\r\n                                        <input type=\"number\" className={this.state.editClass + \" form-control info-right\"}\r\n                                            onChange={this.onChangeInput} Value={this.state.userData.phoneNumber} name=\"phoneNumber\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <button onClick={this.onClickSave} className={this.state.editClass + \" btn btn-primary btn-hs\"}>Lưu</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <div className=\"sub-menu\"> </div>\r\n                        <div className=\"d-flex heading-panel mt-5\">\r\n                            <h3 className=\"col-6 page-title\">Lịch sử mua hàng</h3>\r\n                            <div className=\"col-12\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"data-box\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>STT</td>\r\n                                        <th>Người mua</th>\r\n                                        <th>Số điện thoại</th>\r\n                                        <th>Tổng tiền</th>\r\n                                        <th>Trạng thái</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.state.orders.map((val, key) => {\r\n                                            return (\r\n                                                <tr key={key + 1}>\r\n                                                    <td>{key}</td>\r\n                                                    <td>{val.username}</td>\r\n                                                    <td>{val.phoneNumber}</td>\r\n                                                    <td>{val.totalPrice}</td>\r\n                                                    <td>{val.status}</td>\r\n                                                    <td>\r\n                                                        <button onClick={() => { this.onClickDetail(key) }} className=\"btn btn-outline-info\">\r\n                                                            Chi tiết\r\n                                                    </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <Modal show={this.state.showModal} onHide={this.close}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Chi tiết đơn hàng</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <div className=\" mb-4\">\r\n                                    <ul className=\"list-group mb-3\">\r\n                                        {\r\n                                            this.state.items.map((value, key) => {\r\n                                                return (\r\n                                                    <li key={key} className=\"list-group-item d-flex justify-content-between lh-condensed\">\r\n                                                        <div>\r\n                                                            <h6 className=\"my-0\">{value.name}</h6>\r\n                                                            <small className=\"text-muted\">{\"x \" + value.count}</small>\r\n                                                        </div>\r\n                                                        <span className=\"text-muted\">{value.count * value.price + ' Đ'}</span>\r\n                                                    </li>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button className=\"btn btn-secondary\" onClick={this.close}>Close</button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport Header from './components/header/header';\nimport Register from './components/auth/register'\nimport Restaurant from './components/restaurant-page/restaurant';\nimport Footer from './components/footer/footer';\nimport Search from './components/search/search';\nimport Home from './components/home/home';\nimport * as firebase from 'firebase'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport './config/firebase';\nimport Checkout from './components/checkout/checkout';\nimport Login from './components/auth/login';\nimport Notifier from './components/notifier.js/notifier';\nimport Profile from './components/profile/profile';\n import React, { Component } from 'react'\n \nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { user: null };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          user:user\n        })\n      }\n      else this.setState({ user: null });\n    });\n  }\n\n  render() {\n    if (this.state.user) {\n      return (\n        <div className=\"App\">\n          <Notifier />\n          <Router>\n            <Header />\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/restaurant/:id\" component={Restaurant} />\n              <Route path=\"/restaurants\">\n                <Search />\n              </Route>\n              <Route path=\"/checkout\">\n                <Checkout />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route path=\"/myprofile\">\n                <Profile />\n              </Route>\n            </Switch>\n            <Footer />\n          </Router>\n        </div>\n      );\n    }\n    else return (\n      <div className=\"App\">\n        <Notifier />\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/restaurant/:id\" component={Restaurant} />\n            <Route path=\"/restaurants\">\n              <Search />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/\">\n              <Login />\n            </Route>\n          </Switch>\n          <Footer />\n        </Router>\n      </div>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst cartState = {\r\n    folowCart: true,\r\n    addAlert: false,\r\n    onCheckout: false,\r\n    alertShow: false,\r\n}\r\n\r\nconst cartReducer = (state = cartState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            let cartStorage = JSON.parse(localStorage.getItem('cart'));\r\n            let items = [];\r\n            let total = 0;\r\n            if (cartStorage) {\r\n                items = [...cartStorage.items];\r\n                total = cartStorage.total;\r\n                let tmp = items.findIndex((obj) => {\r\n                    return obj.id == action.item.id;\r\n                })\r\n                if (tmp !== -1) items[tmp].count++;\r\n                else items.push(action.item);\r\n            }\r\n            else items.push(action.item);\r\n            localStorage.setItem('cart', JSON.stringify({\r\n                total: total + 1,\r\n                items: items\r\n            }));\r\n            return { ...state, folowCart: !state.folowCart, alertShow: true };\r\n            \r\n        case 'UPDATE':\r\n            localStorage.setItem('cart', action.data);\r\n            return { ...state, folowCart: !state.folowCart }\r\n\r\n        case 'DELETE':\r\n            let dCartStorage = JSON.parse(localStorage.getItem('cart'));\r\n            let dItems = [...dCartStorage.items];\r\n            let dTotal = dCartStorage.total;\r\n\r\n            let i = dItems.findIndex((obj) => {\r\n                return obj.id == action.item.id;\r\n            })\r\n\r\n            dItems.splice(i, 1);\r\n            localStorage.setItem('cart', JSON.stringify({\r\n                total: dTotal - action.item.count,\r\n                items: dItems\r\n            }));\r\n\r\n            return { ...state, folowCart: !state.folowCart }\r\n\r\n        case 'SHOW_CART':\r\n            return { ...state, onCheckout: !state.onCheckout }\r\n\r\n        case 'HIDE_ALERT':\r\n            return { ...state, alertShow: false }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cartReducer;\r\n","const initialState = {\r\n    location: {\r\n        lat: '10.871326',\r\n        lng: '106.789129'\r\n    },\r\n    address: '1 Võ Văn Ngân TP.HCM Việt Nam'\r\n}\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEARCH':\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default searchReducer;","import { combineReducers } from 'redux';\r\nimport cartReducer from './cart-reducer';\r\nimport searchReducer from './search-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    cartReducer,\r\n    searchReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as redux from 'redux';\r\nimport rootReducer from './reducer/rootReducer';\r\n\r\nvar store1 = redux.createStore(rootReducer);\r\n\r\nexport default store1;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}